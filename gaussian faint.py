# -*- coding: utf-8 -*-
"""
Created on Sun May  5 14:16:02 2024

@author: jdjac
"""
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
import math

f_tan50 = [93.79579311665213,92.53668774105468,94.19415953937803,
           94.33416873155066,94.10227032260117,94.25236621254932,
           94.33386215784766,93.92046276423739,94.33517025438390,
           94.33934325557826]

f_tan100 = [94.88941225531562,94.81697734184962,94.51708314391053,
            94.66330462529449,94.74912742012877,94.63675737168484,
            94.92421460986637,94.52013320506866,94.52013320506866,
            94.80385621801295]

f_sig50 = [90.61729811265856,91.704495161664,91.66498657055833,
           91.49578107188799,91.55780696380563,91.694191559632,
           91.80685076383891,91.64759670223755,92.13751862103543,
           91.69462287225807]

f_sig100 = [92.92190813343140,92.75113857029537,92.853184576889,
            92.47036166036285,92.89243348503112,92.98737210039155,
            92.81852465253755,92.61997745625567,93.09049567404108,
            92.94986864515289]

f_leaky = [95.00841345411378,95.07390896519190,94.55536857310100,
           94.61937695941373,95.06218335647111,95.03974524948997,
           95.27873140826603,94.65051352386473,95.19554248263147,
           95.26209558817237]

f_relu = [94.79192190827128,95.22974462962476,95.19211434668684,
          95.24409108753204,95.12527969022780,95.11996363269701,
          95.23640014387635,95.08997495894627,95.36035682325351,
          95.40106629658034]


L = ['sigmoid_100','sigmoid_50','relu','leaky_relu','tanh_50','tanh_100']
C = ['purple','blue','red','green','orange','brown']
style = ['--','-']

def gaussian_pdf(x, mu, sigma):
    coefficient = 1 / (np.sqrt(2 * np.pi) * sigma)
    exponent = -((x - mu) ** 2) / (2 * sigma ** 2)
    return coefficient * np.exp(exponent)


def plot(x,labelnumber,number):
    mu = np.mean(x)
    sigma = np.std(x)
    x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)
    plt.plot(x, stats.norm.pdf(x, mu, sigma),label=L[labelnumber],color=C[labelnumber],linewidth=3,linestyle=style[number])
    plt.legend()


plot(f_sig100,0,1)
plot(f_sig50,1,1)
plot(f_relu,2,1)
plot(f_leaky,3,1)
plot(f_tan50,4,1)
plot(f_tan100,5,0)

plt.xlabel('accuracy / %')
plt.ylabel('PDF')